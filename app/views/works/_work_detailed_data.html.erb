<div class="detailed_data row">
  <div class="medium-6 columns">
  <% if can?(:read_location, work) %>
    <%= definition_list_for work, {render_as: :table} do %>
      <thead><tr>
        <th>Locatie</th>
        <td class="actions">
          <% if work.persisted? && !@for_print %>
            <% if can?(:edit_location, work) %>
              <%= link_to 'Bewerk', collection_work_edit_location_path(work.collection, work), data: { open_in_context: true} %> |
            <% end %>
            <% if can?(:view_location_history, work) %>
              <%= link_to 'Historie', collection_work_location_history_path(work.collection, work), data: { open_in_context: true} %>
            <% end %>
          <% end %>
        </td>
      </tr></thead>
      <tbody>
      <%= define_unless_blank :location %>
      <%= define_unless_blank :location_floor %>
      <%= define_unless_blank :location_detail %>
      <% if @selection[:display] == :detailed_with_location_history %>
        <tr><th>Historie datum</th><th>Vorige locatie</th></tr>
        <% work.location_history(empty_locations: false, skip_current: true).each do |h_work| %>
          <tr><td><%= I18n.l(h_work[:created_at], format: :short)%></td><td><%= [h_work[:location],h_work[:location_floor],h_work[:location_detail]].compact.join("; ")%></td></tr>
        <% end %>
      <% end %>
      </tbody>
    <% end %>
  <% end %>
  <% if can?(:read_status, work)%>
    <%= definition_list_for work, {render_as: :table} do %>
      <%= define_unless_blank :work_status %>
      <%= define_unless_blank :highlight %>
      <% if @collection.base_collection.show_availability_status %>
        <%= define_unless_blank :for_purchase %>
        <%= define_unless_blank :for_rent %>
        <% if work.availability_status %>
          <tr><th><%= Work.human_attribute_name(:availability_status)%></th><td>
            <% if work.current_active_time_span && work.availability_status == :reserved %>
              <%= link_to I18n.t(work.availability_status, scope: "activerecord.values.work.availability_status"), collection_work_time_spans_path(@collection, work), data: { open_in_context: true }%>
            <% elsif work.current_active_time_span %>
              <%= link_to I18n.t(work.availability_status, scope: "activerecord.values.work.availability_status"), collection_work_time_span_path(@collection, work, work.current_active_time_span), data: { open_in_context: true }%>
            <% elsif work.availability_status == :sold && work.last_active_time_span %>
              <%= link_to I18n.t(work.availability_status, scope: "activerecord.values.work.availability_status"), collection_work_time_span_path(@collection, work, work.last_active_time_span), data: { open_in_context: true }%>
            <% else %>
              <%= I18n.t(work.availability_status, scope: "activerecord.values.work.availability_status") %>
            <% end%>
            <% if Rails.application.secrets.uitleen_site %>
              (<%= link_to "Toon in uitleen", File.join(Rails.application.secrets.uitleen_site, collection_work_path(work.collection, work)) %>)
            <% end %>
          </td></tr>
        <% end%>
      <% end %>
    <% end %>
  <% end %>
  <%= definition_list_for work, {render_as: :table} do %>
    <%= define_unless_blank :alt_number_1, description: Work.human_attribute_name_overridden(:alt_number_1, work.collection) %>
    <%= define_unless_blank :alt_number_2, description: Work.human_attribute_name_overridden(:alt_number_2, work.collection) %>
    <%= define_unless_blank :alt_number_3, description: Work.human_attribute_name_overridden(:alt_number_3, work.collection) %>
    <%= define_unless_blank :alt_number_4 %>
    <%= define_unless_blank :alt_number_5 %>
    <%= define_unless_blank :alt_number_6 %>
    <%= define_unless_blank :object_creation_year, description: 'Datering' %>
    <%= define_unless_blank :object_categories, {humanize_attribute_value: true} %>
    <%= define_unless_blank :techniques %>
    <% if @selection[:display] == :complete %>
      <%= define_unless_blank :medium %>
      <%= sanctioned_define_unless_blank :medium_comments %>
      <%= define_unless_blank :frame_type %>
    <% end %>
    <%= sanctioned_define_unless_blank :signature_rendered %>
    <%= define_unless_blank :object_format_code, {modifier: :upcase} %>
    <%= define_unless_blank :work_size, {description: "Afm. beeld (cm)"} %>
    <%= define_unless_blank :frame_size, {description: "Afm. lijst (cm)"}  %>
    <% if @selection[:display] == :complete %>
      <% if params[:surface_calc] %>
        <%= define_unless_blank :floor_surface %>
        <%= define_unless_blank :wall_surface %>
      <% end %>
      <%= sanctioned_define_unless_blank :abstract_or_figurative_rendered %>
      <%= sanctioned_define_unless_blank :style %>
      <%= sanctioned_define_unless_blank :subset %>
      <%= sanctioned_define_unless_blank :collection_name_extended %>
      <%= sanctioned_define_unless_blank :themes %>
      <%= sanctioned_define_unless_blank :locality_geoname_name %>
    <% end%>
    <%= sanctioned_define_unless_blank :cluster if @selection[:display] != :detailed_discreet %>
    <%= define_unless_blank :print_rendered  %>
  <% end %>
  </div>
  <div class="medium-6 columns">

  <%= definition_list_for work, {render_as: :table} do %>
    <%= sanctioned_define_unless_blank :cached_tag_list if @selection[:display] != :detailed_discreet %>
    <%= sanctioned_define_unless_blank :condition_work_rendered %>
    <%= sanctioned_define_unless_blank :condition_frame_rendered %>
    <% if @selection[:display] == :complete %>
      <%= define_unless_blank :placeability  %>
      <%= define_unless_blank :permanently_fixed if work.permanently_fixed %>
      <%= define_unless_blank :main_collection %>
    <% end %>
    <%= sanctioned_define_unless_blank :grade_within_collection %>
    <%= sanctioned_define_unless_blank :information_back, description: "Info. achterz." %>
    <%= define_unless_blank :other_comments, description: "Overige opm." %>
    <%= define_unless_blank :internal_comments, {description: "Int. opm.", classname: :complete_data} if can?(:read_internal_comments, work) and @selection[:display] != :detailed_discreet and @selection[:display] != :detailed %>
    <% if @selection[:display] == :complete %>
      <%= define_unless_blank :sources %>
      <%= define_unless_blank :source_comments %>
      <%= define_unless_blank :owner %>
    <% end %>
  <% end %>

  <%= definition_list_for work, {render_as: :table} do %>
    <% if work.work_sets.any? && can?(:show, work.work_set) %>
      <tr>
        <% if can?(:read_valuation, work.collection) && work.appraised_in_set? && @selection[:display] != :detailed_discreet %>
        <th rowspan="2">
        <% else %>
        <th>
        <% end %>
          <%=Work.human_attribute_name(:work_sets)%>
        </th>
        <td><%= (work.work_sets.map do |ws|
          if @for_print
            sanitize(ws.name)
          elsif @work_set == ws
            [link_to(sanitize(ws.name), work_set_path(ws.id)), button_to("Verwijder uit groep", work_set_work_path(ws.id,work.id), method: :delete, class: [:alert, :button, :xxsmall])].join(" ")
          else
            link_to(sanitize(ws.name), ws)
          end
        end.to_sentence).html_safe %></td>
      </tr>
    <% end %>
    <% if can?(:read_valuation, work.collection) %>
      <% if work.appraised_in_set? && @selection[:display] != :detailed_discreet %>
        <tr><td>Waardering voor gehele <%= work.appraisable_set.work_set_type_name %></td></tr>
      <% end %>
      <%= define_unless_blank :purchased_on_with_fallback %>
      <% if work.purchase_price && @selection[:display] != :detailed_discreet %>
      <tr><th><%=Work.human_attribute_name(:purchase_price)%></th><td><%=number_to_currency work.purchase_price, unit: work.purchase_price_symbol %></td></tr>
      <% end %>
      <% if @selection[:display] != :detailed_discreet %>
        <%= define_unless_blank :market_value_complete, modifier: :number_to_currency, description: "Marktwaarde" %>
        <%= define_unless_blank :replacement_value_complete, modifier: :number_to_currency, description: "Vervangingswaarde" %>
        <%= define_unless_blank :market_value_range_complete, modifier: :number_to_currency, description: "Marktwaarde" %>
        <%= define_unless_blank :replacement_value_range_complete, modifier: :number_to_currency, description: "Vervangingswaarde" %>
        <%= define_unless_blank :fin_balance_item_id %>
        <%= define_unless_blank :valuation_on %>
        <%= define_unless_blank :appraisal_notice %>

        <%= define_unless_blank :minimum_bid, modifier: :number_to_currency %>
        <%= define_unless_blank :selling_price, modifier: :number_to_currency %>
        <%= define_unless_blank :balance_category %>
        <%= define_unless_blank :selling_price_minimum_bid_comments %>
        <% if can?(:read_valuation_reference, work.collection) %>
          <%= define_unless_blank :price_reference if @selection[:display] == :complete %>
        <% end %>
      <% end %>

    <% end %>
  <% end %>
  <%= definition_list_for work, {render_as: :table} do %>

    <%
    artist_involvements_texts = []

    if @selection_filter and @selection_filter["geoname_ids"] and @selection_filter["geoname_ids"].length > 0
      artist_involvements_texts = work.artist_involvements_texts @selection_filter["geoname_ids"]
    else
      artist_involvements_texts = work.cached_collection_locality_artist_involvements_texts
    end
    if artist_involvements_texts && artist_involvements_texts.length > 0 %>
    <tr><th>Gerelateerde<br/>betrekkingen:</th><td><ul><% artist_involvements_texts.each do |a| %><li><%=a%></li><% end %></ul></td></tr>
    <% end %>
    <% if @selection[:display] == :complete %>
      <%
        role = current_user.role.to_s
        work_attachments = work.attachments.to_a.delete_if{|a| a.id.nil?}.select do |attachment|
          (role == "admin" || role == "advisor" || attachment.visibility.include?(role.to_s))
        end
      %>
      <% if work_attachments.count > 0 %>
        <tr><th>Bijlagen:</th><td><ul>
          <% work_attachments.each do |attachment| %>
            <li>
              <%= @for_print ? attachment.file_name.truncate(30, omission: "…#{attachment.file_name&.last(15)}") : link_to(attachment.file_name.truncate(30, omission: "…#{attachment.file_name&.last(15)}"), attachment.file.url, title: attachment.file_name, target: '_blank') %> <small>(<%= number_to_human_size(attachment.file.size)%>)</small>
            </li>
          <% end %>
        </ul></td></tr>
      <% end %>
      <%= sanctioned_define_unless_blank :image_rights %>
      <%= sanctioned_define_unless_blank :publish %>
      <%= sanctioned_define_unless_blank :created_at %>
      <%= sanctioned_define_unless_blank :significantly_updated_at, {classname: "show-only-sort-updated_at"} if work.significantly_updated_at.to_f.round(3) != work.created_at.to_f.round(3)%>
      <%= sanctioned_define_unless_blank :inventoried_at %>
      <%= sanctioned_define_unless_blank :refound_at %>
      <%= sanctioned_define_unless_blank :new_found_at %>
    <% end %>
    <% if @work&.old_data&.present? %>
    <tr><th>Verder</th><td><%= link_to "Gegevens ten tijde van import", collection_work_old_data_path(@collection, @work), data: { open_in_context: true}%></td></tr>
    <% end %>

  <% end %>
  </div>
</div>
