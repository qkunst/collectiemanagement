require "rails_helper"

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to test the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator. If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails. There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.

RSpec.describe "/users", type: :request do
  describe "GET /users/password/new [QSECIMP0006]" do
    it "is accessible by default (default devise controller)" do
      get new_user_password_path
      expect(response).to be_successful
    end
  end

  describe "POST /users/session" do
    it "returns a 422 when signing in without authenticity token" do
      post user_session_path(params: {user: {email: "test-user2@murb.nl", password: "asdfasdf", remember_me: false}})
      expect(response).to be_unprocessable
    end
  end

  describe "User Devise config" do
    it "has support for time based unlocking [QSECIMP0028]" do
      expect(User.unlock_strategy_enabled?(:time)).to be_truthy
    end

    it "has support for email based unlocking [QSECIMP0028]" do
      expect(User.unlock_strategy_enabled?(:email)).to be_truthy
    end

    it "allows for a maximum of 10 requests [QSECIMP0028]" do
      expect(Devise.maximum_attempts).to be <= 10
    end
  end
end
