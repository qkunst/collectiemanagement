#!/usr/bin/env node

const puppeteer = require('puppeteer');

console.log(`Creating a PDF for ${process.argv[2]}`);

const targetFilename = process.argv[3] || 'example.pdf'
console.log(`Writing to: ${targetFilename}`);

const sleep = (milliseconds) => {
  return new Promise(resolve => setTimeout(resolve, milliseconds))
}

const toPdf = (async () => {
  const browser = await puppeteer.launch({
    headless: true,
    args: ['--font-render-hinting=medium']
  });

  const browserVersion = await browser.version();
  console.log(`Browser version: ${browserVersion}`);

  const page = await browser.newPage();
  await page.setDefaultTimeout(30*60*1000) // 30 min
  await page.emulateMediaType('screen');
  await page.goto(process.argv[2], {waitUntil: 'networkidle0'});

  await sleep(2000);

  await page.pdf({ path: targetFilename, format: 'a4', printBackground: true, margin: {left: "1cm", top: "1cm", right: "1cm", bottom: "1cm" }});

  await browser.close();
  console.log("Done.")
});

// https://stackoverflow.com/questions/40574218/how-to-perform-an-async-operation-on-exit

async function exitHandler(evtOrExitCodeOrError) {
  try {
    await toPdf();
  } catch (e) {
    console.error('EXIT HANDLER ERROR', e);
  }
  console.log("Done.")

  process.exit(isNaN(+evtOrExitCodeOrError) ? 1 : +evtOrExitCodeOrError);
}

[
  'beforeExit', 'uncaughtException', 'unhandledRejection',
  'SIGHUP', 'SIGINT', 'SIGQUIT', 'SIGILL', 'SIGTRAP',
  'SIGABRT','SIGBUS', 'SIGFPE', 'SIGUSR1', 'SIGSEGV',
  'SIGUSR2', 'SIGTERM',
].forEach(evt => process.on(evt, exitHandler));