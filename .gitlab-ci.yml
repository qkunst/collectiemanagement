# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Ruby.gitlab-ci.yml

# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/ruby/tags/
image: $CI_REGISTRY/murb-org/build-image/ruby:3.4

variables:
# Configure postgres service (https://hub.docker.com/_/postgres/)
  POSTGRES_DB: gitlabci
  POSTGRES_USER: gitlabci
  POSTGRES_PASSWORD: gitlabci
  RAILS_ENV: gitlabci
# Pick zero or more services to be used on all builds.
# Only needed when using a docker container to run your tests in.
# Check out: http://docs.gitlab.com/ee/ci/docker/using_docker_images.html#what-is-a-service
# services:
#   - mysql:latest
#   - redis:latest
#   - postgres:latest

# variables:
#   POSTGRES_DB: database_name

# Cache gems in between builds
cache:
  paths:
    - vendor/ruby
    - .nvm
    - node_modules

test:
  before_script:
    - bundle install --path=vendor/ruby --without production --jobs $(nproc) "${FLAGS[@]}"
    - bundle exec rails db:create RAILS_ENV=gitlabci
    - bundle exec rails db:migrate RAILS_ENV=gitlabci
    - bundle exec rails qkunst:new_index_and_sync RAILS_ENV=gitlabci
    - ruby --version
    - bundler --version
    - node --version
    - yarn --version
  services:
    - name: "docker.elastic.co/elasticsearch/elasticsearch:7.13.2"
      alias: "elasticsearch"
      command: [ "bin/elasticsearch", "-Expack.security.enabled=false", "-Ediscovery.type=single-node" ]
    - redis:alpine
    - postgres:11
  script:
    - yarn install --frozen-lockfile --cache-folder .yarn-cache
    - bundle exec rails assets:precompile RAILS_ENV=gitlabci
    - RAILS_ENV=gitlabci bundle exec rspec
  coverage: /\(\d+.\d+\%\) covered/
  artifacts:
    when: always
    paths:
      - rspec.xml
      - coverage/coverage.xml
    reports:
      junit: rspec.xml
      coverage_report:
        coverage_format: cobertura
        path: coverage/coverage.xml
  artifacts:
    expire_in: 7d
    paths:
      - public/assets
      - log/

standard:
  script:
    - gem install standard
    - standardrb

bundleaudit:
  script:
    - gem install bundler-audit
    - bundle audit

brakeman:
  script:
    - gem install prism # older versions of prism might give errors on `it`
    - gem install brakeman
    - brakeman -i config/brakeman.ignore
